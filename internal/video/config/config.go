package config

import (
	"douyin/pkg/db"
	"io/ioutil"
	"log"

	"gopkg.in/yaml.v2"
)

type AutoGenerated struct {
	RPC   RPC      `yaml:"rpc"`
	Mysql db.Mysql `yaml:"mysql"`
	Redis db.Redis `yaml:"redis"`
	Web   Web      `yaml:"web"`
	Log   Log      `yaml:"log"`
}
type RPC struct {
	User  string `yaml:"user"`
	Video string `yaml:"video"`
}
type Web struct {
	Addr string `yaml:"addr"`
}
type Log struct {
	Env        string `yaml:"env"`
	Path       string `yaml:"path"`
	Encoding   string `yaml:"encoding"`
	MaxSize    int    `yaml:"max_size"`
	MaxAge     int    `yaml:"max_age"`
	MaxBackups int    `yaml:"max_backups"`
}

// WrapperConfig
type WrapperConfig struct {
	AutoGenerated
}

var GlobalConfig *WrapperConfig

// 解析配置文件
func Init(path string) *WrapperConfig {
	// 读取配置文件解析 AutoGenerated 结构体
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		log.Fatal("读取配置文件失败:=", err)
		panic(err)
	}
	var conf AutoGenerated
	err = yaml.Unmarshal(buf, &conf)
	if err != nil {
		log.Fatal("解析配置文件失败:=", err)
		panic(err)
	}

	GlobalConfig = &WrapperConfig{
		AutoGenerated: conf,
	}

	return GlobalConfig
}
